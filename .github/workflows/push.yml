name: Go

on:
  push:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: go build -o mysqlRowsCount main.go

      - name: Test
        run: go test -v .

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: mysqlRowsCount
          path: mysqlRowsCount

  test-mysql:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        mysql: [5.6, 5.7, 8.0]

    env:
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: test
      MYSQL_ROOT_PASSWORD: mysql123

    services:
      mysql:
        image: mysql:${{ matrix.mysql }}
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10
        ports:
          - 3306:3306
        env:
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}

    steps:
      - uses: actions/checkout@v1

      - name: download
        uses: actions/download-artifact@v1
        with:
          name: mysqlRowsCount

      - name: MySQL init
        run: mysql -u root -p${{ env.MYSQL_ROOT_PASSWORD }} -h 127.0.0.1 -P ${{ job.services.mysql.ports['3306'] }} < test/init.sql

      - name: chmod
        run: chmod +x mysqlRowsCount/mysqlRowsCount

      - name: Test
        run: mysqlRowsCount/mysqlRowsCount run --config ./config.json --port ${{ job.services.mysql.ports['3306'] }}
